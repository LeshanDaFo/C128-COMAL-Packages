;
;
;
;   +--------------------------------------------------+
;   !                                                  !
;   !      ****** COMMODORE 128  COMAL-80 ******       !
;   !                                                  !
;   !      (C) COPYRIGHT UNICOMAL A/S 1984, 1986       !
;   !              ALL RIGHTS RESERVED.                !
;   !                                                  !
;   !                                                  !
;   !  C128SYMB2 FOR COMMODORE 128 COMAL-80 REV. 2.02  !
;   !                                                  !
;   +--------------------------------------------------+
;
;
;
; �������� KERNAL VARIABLES
;
;
SYSVEC *=*+2 ;VECTOR TO RESTART SYSTEM
DEJAVU *=*+1 ;KERNAL WARM/COLD INIT. STATUS BYTE
PALNTS *=*+1 ;PAL/NTSC SYSTEM FLAG
ISTAT *=*+1 ;FLAGS RESET VS. NMI STATUS FOR INIT ROUT
MEMSTR *=*+2 ;START OF MEMORY
MEMSIZ *=*+2 ;TOP OF MEMORY
;
IRQTMP *=*+2 ;TAPE HANDLER IRQ INDIRECT
CASTON *=*+1 ;TAPE SENSE DURING TAPE OP.
KIKA26 *=*+1 ;TAPE READ TEMP
STUPID *=*+1 ;TAPE READ D1 IRQ IND.
;
TIMOUT *=*+1 ;FAST SERIAL TIMEOUT FLAG
;
;
;  RS232 STORAGE
;
ENABL *=*+1 ;RS-232 ENABLES
M51CTR *=*+1 ;6551 CONTROL REGISTER IMAGE
M51CDR *=*+1 ;6551 COMMAND REGISTER IMAGE
M51AJB *=*+2 ;NON-STANDARD BPS (TIME/2-100) USA
RSSTAT *=*+1 ;6551 STATUS REGISTER
BITNUM *=*+1 ;NUMBER OF BITS LEFT TO SEND
BAUDOF *=*+2 ;BAUD RATE: FULL BIT TIME (MICROSEC)
RIDBE *=*+1 ;INDEX TO END OF INPUT BUFFER
RIDBS *=*+1 ;START OF INPUT BUFFER (PAGE)
RODBS *=*+1 ;START OF OUTPUT BUFFER (PAGE)
RODBE *=*+1 ;INDEX TO END OF OUTPUT BUFFER
;
SERIAL *=*+1 ;FAST SERIAL INT/EXT FLAG
;
TIMER *=*+3 ;DEC. JIFFLE REGISTER
;
;  ������ SCREEN EDITOR STORAGE
;
KBFLIM *=*+1 ;KEYBOARD QUEUE MAX SIZE
PAUSE *=*+1 ;<CRTL>-� FLAG
RPTFLG *=*+1 ;ENABLE KEY REPEAT
KOUNT *=*+1 ;DELAY BETWEEN KEY REPEATS
DELAY *=*+1 ;DELAY BEFORE KEY REPEAT
LSTSHF *=*+1 ;DELAY BETWEEN <�=><SHFT> TOGGLES
;
BLNON *=*+1 ;VIC CURSOR MODE
BLNSW *=*+1 ;VIC CURSOR DISABLE
BLNCT *=*+1 ;VIC CURSOR BLINK COUNTER
GDBLN *=*+1 ;VIC CURSOR CHAR BEFORE BLINK
GDCOL *=*+1 ;VIC CURSOR COLOR BEF. BLINK
;
CURMOD *=*+1 ;VDC CURSOR MODE (WHEN ENABLED)
;
VM1 *=*+1 ;VIC TEXT SCREEN.CHAR BASE POINTER
VM2 *=*+1 ;VIC BIT-MAP BASE POINTER
VM3 *=*+1 ;VDC TEXT SCREEN BASE
VM4 *=*+1 ;VDC ATTRIBUTE BASE
;
LINTMP *=*+1 ;TEMP PTR TO LAST LINE FOR ����4
SAV80A *=*+1 ;TEMP FOR 80-COL ROUTINES
SAV80B *=*+1 ;
CURCOL *=*+1 ;VDC CURSOR COLOR BEFORE BLINK
SPLITK *=*+1 ;VIC SPLIT SCREEN RASTER VALUE
FNADRX *=*+1 ;SAVE .X DURING BANK OPERATION
PALCNT *=*+1 ;COUNTER FOR PAL SYSTEMS
SPEED *=*+1 ;SAVE SYSTEM SPEED DUR. TAPE/SERIAL OP.
SPRITE *=*+1 ;SAVE SPRITE ENABLES DUR. TAPE OP.
BLNING *=*+1 ;SAVE BLANKING STATUS DUR. TAPE OP.
HLDOFF *=*+1 ;FLAG FOR USER FULL CONTROL OF VIC
LDTBSA *=*+1 ;HIGH BYTE OF SA OF VIC SCREEN
HIBASE =LDTBSA ;64-KERNAL NAME HIBASE
 *=*+2 ;8563 BLOCK FILL KLUDGE
;
;  ����� SCREEN EDITOR VAR. SWAP AREA
;
;
 *=$0A40 ;LOCAL VARIABLES
;
 *=$0A60 ;LOCAL TAB MAP & WRAP TABLES
;
;  ������� ABSOLUTE DECLARATIONS
;
 *=$0A80
;
; FUNCTION KEY ROM CARD TABLES
;
 *=$0AC0
CURBNK *=*+1 ;CURRENT FUNC.KEY ROM BANK
PAT *=*+4 ;PHYSICAL ADDRESS TABLE (�� OF LOGGED-IN CARD)
DKFLAG *=*+1 ;RESERVED FOR FOREIGN SCREEN EDITORS
;
 *=$0B00
BUFSZ =192 ;TAPE BUFFER SIZE
TBUFFR *=*+BUFSZ ;CASETTE BUFFER
;
 *=$0C00 ;RS-232 INPUT BUFFER
RS232I 
;
 *=$0D00 ;RS-232 OUTPUT BUFFER
RS232O 
;
 *=$0E00 ;SPRITE DEF. AREA (MUST BE BELOW $1000 !!!)
;
;      *=$1000           ;PROGRAMMABLE FUNCTION KEY DEF.
;PKYNUM =10               ;NUM.OF DEFINABLE KEYS (F1-F8,<SHIFT>RUN,HELP)
;PKYBUF *=*+PKYNUM        ;PROG. FUNC. KEY LENGTHS TABLE
;PKYDEF *=*+256-PKYNUM    ;PROG. FUNC. KEY STRING
;
 *=$1100 ;CP/M RESET CODE,BASIC DOS & VSP VAR.
;
;  COMAL RAM CODE
;
KJMPTB =*
;
;  KERNAL JUMPTABLE
;
CINT *=*+9 ;KERNAL: CINT
RESTOR *=*+9 ;KERNAL: RESTOR
RAMTAS *=*+9 ;KERNAL: RAMTAS
IOINIT *=*+9 ;KERNAL: IOINIT
CHKIN *=*+9 ;KERNAL: CHKIN
CKOUT *=*+22 ;KERNAL: CKOUT
CLRCH *=*+23 ;KERNAL: CLRCH
OPEN *=*+9 ;KERNAL: OPEN
CLOSE *=*+9 ;KERNAL: CLOSE
RDT *=*+9 ;KERNAL: RDT
WRT *=*+9 ;KERNAL: WRT
GET *=*+9 ;KERNAL: GET
SETNAM *=*+9 ;KERNAL: SETNAM
PLOT *=*+9 ;KERNAL: PLOT
DISPLY *=*+9 ;EDITOR: DISPLY
CURSOR *=*+9 ;EDITOR: CURSOR
ESCFNC *=*+9 ;EDITOR: ESCFNC
SPIOUT *=*+9 ;KERNAL: SPIOUT
SWAP *=*+9 ;EDITOR: SWAPPER
WINDOW *=*+9 ;EDITOR: WINDOW
PRINT *=*+9 ;EDITOR: PRINT
;
       *=$1200           ;UNUSED
;
 *=$1300 ;UNALLOCATED RAM
;
STDPK1 *=*+150 ;GRAPHIC IRQ RAM CODE
;
STDPK2 *=*+900
;
SPSAV *=*+1 ;SAVE OF .S DURING EXECUTION
SCINF *=*+2 ;NAME POINTER
;
PSTART =*
;
AUTO1 *=*+2 ;CURRENT LINE NUMBER FOR AUTO
AUTOST *=*+2 ;STEP FOR AUTO
;
DSTART *=*+2 ;START OF DATA QUEUE
;
TABSET *=*+1 ;VALUE OF LAST ZONE STATEMENT
ALTPOS *=*+1 ;POSITION IN SELECT OUTPUT FILE
INTRNO *=*+2 ;PROCEDURE GIVEN BY INTERRUPT STMT.
;
PEND =*
;
ERRPNT *=*+1 ;CHAR POS OF ERROR
NORINT *=*+2 ;NORMAL INTERRUPT VECTOR
SAFE *=*+1 ;SAFE STATUS
MAINRV *=*+1 ;MAIN REVISION
SUBRV *=*+1 ;SUB REVISION
TESTRV *=*+1 ;TEST VERSION
MSGLIN *=*+2 ;ADDRESS OF MESSAGE LINE
MSGPRE *=*+1 ;MESSAGE PRESENT FLAG
OLDPNT *=*+2 ;SAVE PNT
UPPER2 *=*+1 ;COPY OF BORGE
EXTPRC *=*+1 ;FLAG FOR LOADING OF EXTERNAL PROC/FUNC
EOFBLK *=*+1 ;BURST READ LAST BLOK
LOADMD *=*+1 ;LOAD MODE: =0 BURST =1 NORMAL LOAD
EXTCNT *=*+2 ;NESTING LEVEL OF EXTERNAL PROC/FUNC
INSMOD *=*+1 ;SAVE LOC FOR INSFLG
LUNIT *=*+1 ;LAST DISC (STATUS)
BORGE *=*+1 ;SPECIAL FLAGS FOR LISTING
OPENFL *=*+1 ;FLAG USED BY COPEN
DFUNLN *=*+1 ;LENGTH OF DEFAULT UNIT TEXT
DFUNIT *=*+2 ;DEFAULT UNIT (POWER UP VALUE: .BYTE '0')
DEFOUT *=*+1 ;SELECT OUTPUT FLAG
;
;
PPAGE *=*+1 ;OVERLAY TO PEEK/POKE/SYS
LOADIN *=*+1 ;<>0: LOADING COMAL PROGRAM
UNITFL *=*+1 ;0: SIMP.DEV; 1: DRIVE; 2: CASSETTE
MODE *=*+1 ;FILE MODE
CSTAT *=*+1 ;STATUS OF COMAL PROGRAM
;
;    1: INPUT ANALYSIS FROM SCREEN
;    2:   -       -      -  FILE
;    3: PREPASSING
;    4: EXECUTING A COMMAND
;    5: EXECUTING PROGRAM
;
LSTFLG *=*+1 ;BIT VECTOR FOR RCREAT:
;
ININD =$01
OUTIND =$02
LSTCON =$04
NOIND =$08
LSTEXT =$10
;
LPMODE *=*+1 ;DEFAULT PRINTER OPEN MODE
LPSA *=*+1 ;DEFAULT PRINTER SECONDARY ADDRESS
LPFA *=*+1 ;DEFAULT PRINTER UNIT
SPMODE *=*+1 ;DEFAULT RS232 OPEN MODE
SPSA *=*+1 ;DEFAULT RS232 SECONDARY ADDRESS
SPFA *=*+1 ;DEFAULT RS232 UNIT
;
RECDEL *=*+1 ;RECORD POSITIONING DELAY
ENDADR *=*+2 ;TOP OF RAM
HEADLN *=*+1 ;POWER ON MESSAGE FLAG
;
KWTAB *=*+2 ;KEYWORD TABLE (PAGEA)
;
DFBORD *=*+1 ;DEFAULT BORDER COLOR
DFBACK *=*+1 ;DEFAULT BACKGROUND COLOR
DFFORG *=*+1 ;DEFAULT FOREGROUND COLOR
ACBORD *=*+1 ;ACTUAL TEXT BORDER
ACBACK *=*+1 ;ACTUAL TEXT BACKGROUND
DF8FOR *=*+1 ;DEFAULT 80 CHAR FOREGROUND COLOR
DF8BCK *=*+1 ;DEFAULT 80 CHAR BACKGROUND COLOR
;
DEFINP *=*+1 ;SELECT INPUT FLAG
HZ50 *=*+1 ;0=60 HZ, 1=50 HZ TOD
MSKPAG *=*+1 ;MASKED PAGE INFO
INPOFS *=*+1 ;INPUT OFFSET
TRCHAR *=*+1 ;TERMINATOR CHAR
TEROFS *=*+1 ;TERMINATOR OFFSET
CURMOF *=*+1 ;VDC CURSOR MODE WHEN DISABLET
CPUSPD *=*+1 ;CPU SPEED (0=AUTO,$80=1MHZ,$C0=2MHZ)
CN2MHZ *=*+1
COLDVC *=*+1 ;COLD START IRQ VECTOR
CPCASE *=*+1 ;CURRENT PRINTER CASE (HARDCOPY)
QMODE *=*+1 ;HARDCOPY QUOTE MODE
;
RANGNO *=*+1 ;LINE # RANGE POINTER
RANGPT *=*+1 ;LINE # RANGE POINTER
RANGMX =32
RANGES *=*+RANGMX ;LINE # RANGES
IERROR *=*+2 ;VECTOR: PRINT BASIC ERROR MESSAGE
NUM2 *=*+5
;
ACTLEN *=*+1 ;VAR FOR GETLIN
SPELEN *=*+1
CURPOS *=*+1
;
FSELEN *=*+1 ;LENGTH OF SEARCH STRING
FRELEN *=*+1 ;LENGTH OF REPLACE STRING
FSKIP *=*+1 ;
FMODE *=*+1 ;BIT7: 1=CHANGE 0=EDIT OR FIND
RAMFRE *=*+2 ;POINTER TO FREE IN EXTRA RAM
RAMTOP *=*+2 ;TOP OF EXTRA RAM ($C000)
 *=*+10 ;UNUSED
;
;
MTO =*
;
;  SUBROUTINES TO USE IN ASSEMBLER
;  CODED SUBROUTINES IN COMAL:
;
COLD *=*+3 ;COLD START OF COMAL
WARM *=*+3 ;WARM START OF COMAL
CALL *=*+3 ;JSR TO ANOTHER PAGE.
GOTO *=*+3 ;JMP TO ANOTHER PAGE.
LOAD *=*+3 ;LOAD FROM PAGEX
STORE *=*+3 ;STORE TO PAGEX
EXEC *=*+3 ;JSR TO PAGEX
SPAGEX *=*+3 ;SET PAGEX
;
LDAC1 *=*+3 ;LOAD AC1
LDAC2 *=*+3 ;LOAD AC2
FNDPAR *=*+3 ;FIND PARAMETER (ASM.CALLS)
COPY *=*+9 ;COPY AREA TOWARDS LOWER ADDRESSES
COPYDN *=*+9 ;COPY AREA TOWARDS HIGHER ADDRESSES
FPADD *=*+3 ;LOAD AC2 AND ADD AC2 TO AC1
FPADD2 *=*+9 ;ADD AC2 TO AC1
FPAHF *=*+9 ;ADD 0.5 TO AC1
FPSUB *=*+3 ;LOAD AC2 AND SUB AC2 FROM AC1
FPSUB2 *=*+9 ;SUB AC2 FROM AC1
FPMUL *=*+3 ;LOAD AC2 AND MUL AC2 BY AC1
FPMUL2 *=*+9 ;MUL AC2 BY AC1
FPDIV *=*+3 ;LOAD AC2 AND DIV AC2 BY AC1
FPDIV2 *=*+9 ;DIV AC2 BY AC1
MUL10 *=*+9 ;MULTIPLY AC1 BY 10.0
DIV10 *=*+9 ;DIVIDE AC1 BY 10.0
STAC1 *=*+3 ;STORE AC1
C1T2 *=*+9 ;COPY AC1 TO AC2
C2T1 *=*+9 ;COPY AC2 TO AC1
FPNEG *=*+9 ;NEGATE AC1
FPSGN *=*+9 ;SIGN OF AC1
FPSIN *=*+9 ;SINE OF AC1
FPCOS *=*+9 ;COSINE OF AC1
FPSQR *=*+9 ;SQUARE ROOT OF AC1
FPTAN *=*+9 ;TANGENT OF AC1
FPPOW *=*+9 ;RAISE AC2 TO THE POWER OF AC1
FPATN *=*+9 ;ARCTANGENT OF AC1
FPEXP *=*+9 ;RAISE AC1 TO THE POWER OF E
FPLOG *=*+9 ;LOGARITHM BASE E OF AC1
FPRND *=*+9 ;COMPUTE PSEUDO-RANDOM NUMBER (RANGE 0 TO 1)
FPCOM *=*+9 ;COMPARE NUMBER TO AC1
TRUNC *=*+9 ;CONVERT AC1 INTO INTEGER (-32768 .. 32767)
FPINT =TRUNC
FPINTG *=*+9 ;CONVERT AC1 INTO INTEGER (-2^24 .. 2^24-1)
FPINTA *=*+9 ;CONVERT AC1 INTO INTEGER (0 .. 65535)
INTFP *=*+9 ;CONVERT INTEGER INTO FP IN AC1
FPASC *=*+9 ;CONVERT AC1 INTO ASCII EQUIVALENT (STR$)
;
VAL *=*+6 ;CONVERT DECIMAL STRING INTO BINARY IN AC1
POPA1 *=*+9 ;POP AC1
POPA2 *=*+9 ;POP AC2
PUSHA1 *=*+9 ;PUSH AC1
PUSHRL *=*+9 ;PUSH REAL NUMBER
PSHINT *=*+9 ;FLOAT & PUSH INTEGER (-32768 .. 32767)
INTFPA *=*+9 ;FLOAT & PUSH INTEGER (0 .. 65535)
;
EXCGST *=*+9 ;ALLOCATE LOCAL STORAGE
EXCREM *=*+9 ;RECLAIM LOCAL STORAGE
RESTOP *=*+9 ;ALLOCATE GLOBAL STORAGE
RUNERR *=*+6 ;GO TO COMAL ERROR HANDLER
;
CRDT *=*+3 ;READ CHARACTER
SPACE *=*+2 ;WRITE SPACE
CWRT *=*+3 ;WRITE CHARACTER
CCHKIN *=*+3 ;SELECT INPUT FILE
CCKOUT *=*+3 ;SELECT OUTPUT FILE
CCLRCH *=*+3 ;CLEAR CHANNEL
CFNAME *=*+7 ;PARSE & COPY FILE NAME
COPEN *=*+3 ;OPEN FILE
CCLOSE *=*+3 ;CLOSE FILE
CRLF *=*+3 ;OUTPUT CR AND LF
GETLIN *=*+7 ;INPUT KEYBOARD LINE
;
RESET *=*+6 ;RESET PROGRAM POINTERS
DUMMY *=*+1 ;EMPTY SUBROUTINE (RTS)
COMAL *=*+6 ;GO TO COMAL EDITOR
EXCUTE *=*+7 ;EXECUTE CODE IN CDBUF
JLOAD *=*+7 ;LOAD COMAL PROGRAM
ARRLEN *=*+7 ;COMPUTE NO. OF ELEMENTS IN ARRAY
FOPEN *=*+7 ;FAST DISK OPEN
FCLOSE *=*+7 ;FAST DISK CLOSE
CGET *=*+3 ;GET CHARACTER
HARDCO *=*+7 ;PRINT HARDCOPY
;
;-----------------------------------------------
;
;  COMAL PROGRAM FOLLOWS HERE:
;
 *=$2000
MBEGIN *=*+4 ;START OF MEMORY
MBEGN1 *=*+1 ;START OF NAME TABLE
MBEGN2 *=*+1 ;START OF STACKS
;
;/////// �/� �EVICE MAP /////////
;
VICCHR =$D000 ;VIC CHARACTER ROM
;
VICREG =$D000 ;VIC REGISTERS
;
SIDREG =$D400 ;SID REGISTERS
;
MMULO =$D500 ;MMU PRIMORY REGISTERS
;
VDC =$D600 ;8563 REGISTERS
;
VICCOL =$D800 ;VIC COLOR NYBBLES
;
CIA1 =$DC00 ;6526 #1
;
CIA2 =$DD00 ;6526 #2
;
IO1 =$DE00 ;EXP. I/O SLOT
;
IO2 =$DF00 ;EPX. I/O SLOT RESERVED FOR ��� CTLR
;
MMUHI =$FF00 ;MMU SECONDARY REGISTERS
;
;
 *=VICREG
;
;  6566 VIDEO INTERFACE CONTROLLER
;
VIC =*
SPRPOS *=*+16 ;SPRITES 0-7  X & Y POS
SPRXPS *=*+1 ;SPRITES 0-7  X-POS (MSB OF X-COORD.)
VCTRL1 *=*+1 ;VIC CONTROL REGISTER
RWRAST *=*+1 ;READ/WRITE RASTER VALUE FOR COMPARE IRQ
PENX *=*+1 ;LIGHT-PEN LATCH X-POS
PENY *=*+1 ;LIGHT-PEN LATCH Y-POS
SPRDSP *=*+1 ;SPRITE DISPLAY ENABLE
VCTRL2 *=*+1 ;VIC CONTROL REGISTER
SPRYEX *=*+1 ;SPRITES 0-7 EXPAND 2*VERTICAL (Y)
VCTRL3 *=*+1 ;VIC MEMORY CONTROL REGISTER
IRQOCC *=*+1 ;VIC INTERRUPT FLAG REGISTER
IRQMSK *=*+1 ;IRQ MASK REGISTER
SPRBDP *=*+1 ;SPRITE TO BACKGROUND DISPLAY PRIORITY
SPRMCM *=*+1 ;SPRITES 0-7 MULTI-COLOR MODE SELECT
SPRXEX *=*+1 ;SPRITES 0-7 EXPAND 2*HORIZONTAL (X)
SPRSPR *=*+1 ;SPRITE TO SPRITE COLLISION DETECT
SPRBCK *=*+1 ;SPRITE TO BACKGROUND COLLISION DETECT
BORCOL *=*+1 ;BORDER COLOR
BCKCOL *=*+4 ;BACKGROUND COLOR 0-3
SPRMCL *=*+2 ;SPRITE MULTI-COLOR REGISTER 0-1
SPRCOL *=*+8 ;SPRITE 0-7 COLOR
;
 *=SIDREG
;
;  6581 SOUND INTERFACE DEVICE
;
SID =* ;VOICE 1:
V1FREQ *=*+2 ;  FREQUENCY CONTROL
V1PWW *=*+2 ;  PULSE WAVEFORM WIDTH
V1CTRL *=*+1 ;  CONTROL REGISTER
V1ENVL *=*+2 ;  ENVELOPE GENERATOR (ADSR)
 ;VOICE 2:
V2FREQ *=*+2 ;  FREQUENCY CONTROL
V2PWW *=*+2 ;  PULSE WAVEFORM WIDTH
V2CTRL *=*+1 ;  CONTROL REGISTER
V2ENVL *=*+2 ;  ENVELOPE GENERATOR (ADSR)
 ;VOICE 3:
V3FREQ *=*+2 ;  FREQUENCY CONTROL
V3PWW *=*+2 ;  PULSE WAVEFORM WIDTH
V3CTRL *=*+1 ;  CONTROL REGISTER
V3ENVL *=*+2 ;  ENVELOPE GENERATOR (ADSR)
 ;FILTERS:
FCUTOF *=*+2 ;  FILTER CUTOFF FREQUENCY
FRESON *=*+1 ;  FILTER RESONANCE/VOICE INPUT CONTROL
FMOVOL *=*+1 ;  SELECT FILTER MODE AND VOLUME
PADDL1 *=*+1 ;A/D-CONVERTER: GAME PADDLE 1
PADDL2 *=*+1 ;A/D-CONVERTER: GAME PADDLE 2
OSC *=*+1 ;OSCILLATOR 3 RANDOM NUMBER GENERATOR
ENV *=*+1 ;ENVELOPE GENERATOR 3 OUTPUT
;
;  VIC COLOR RAM
;
 *=VICCOL
COLRAM *=*+SCSIZE+24 ;COLOR RAM (NYBBLES)
;
 *=CIA1
;
;  6526 COMPLEX INTERFACE ADAPTER #1
;
CHTIM =*
COLM =* ;KEYBOARD MATRIX
D1PRA *=*+1
ROWS =* ;KEYBOARD MATRIX
D1PRB *=*+1
D1DDRA *=*+1
D1DDRB *=*+1
D1T1L *=*+1
D1T1H *=*+1
D1T2L *=*+1
D1T2H *=*+1
D1TOD1 *=*+1
D1TODS *=*+1
D1TODM *=*+1
D1TODH *=*+1
D1SDR *=*+1
D1ICR *=*+1
D1CRA *=*+1
D1CRB *=*+1
;
 *=CIA2
;
;  6526 COMPLEX INTERFACE ADAPTER #2
;
D2PRA *=*+1
D2PRB *=*+1
D2DDRA *=*+1
D2DDRB *=*+1
D2T1L *=*+1
D2T1H *=*+1
D2T2L *=*+1
D2T2H *=*+1
D2TOD1 *=*+1
D2TODS *=*+1
D2TODM *=*+1
D2TODH *=*+1
D2SDR *=*+1
S2ICR *=*+1
D2CRA *=*+1
D2CRB *=*+1
;
 *=IO1
;
OVRLAY *=*+256 ;OVERLAY CONTROL PORT
;
; C/128 MEMORY MANAGEMENT UNIT
;
 *=MMULO
MMUCRL *=*+1 ;CONFIGURATION REGISTER (PRIM)
PCRA *=*+1 ;PRE. CONFIG. REG. A
PCRB *=*+1 ;PRE. CONFIG. REG. B
PCRC *=*+1 ;PRE. CONFIG. REG. C
PCRD *=*+1 ;PRE. CONFIG. REG. D
MMUMCR *=*+1 ;MODE CONFIG. REG.
MMURCR *=*+1 ;RAM CONFIG. REG.
MMUP0L *=*+1 ;PAGE 0 PTR LOW
MMUP0H *=*+1 ;PAGE 0 PTR HIGH
MMUP1L *=*+1 ;PAGE 1 PTR LOW
MMUP1H *=*+1 ;PAGE 1 PTR HIGH
MMUVER *=*+1 ;MMU VERSION NUMBER
;
 *=MMUHI
MMUCR *=*+1 ;CONFIG. REG. SECONDARY
LCRA *=*+1 ;LOAD CONFIG. REG. A
LCRB *=*+1 ;LOAD CONFIG. REG. B
LCRC *=*+1 ;LOAD CONFIG. REG. C
LCRD *=*+1 ;LOAD CONFIG. REG. D
;
;
; C/128 80-COLUMN VIDEO CONTROLER
;
 *=VDC
VDCADR *=*+1 ;8563 ADDR. REG
VDCDAT *=*+1 ;8563 DATA REG.
;
VDCSCN =$0000 ;8563 80-COLUMN SCREEN (2KB)
VDCCOL =$0800 ;8563 ATTRIBUTE AREA (2KB)
VDCCHR =$2000 ;8563 CHARACTER RAM (4KB)
;
SKIP =$2C ;OPCODE FOR 'BIT <ABS>' (SKIP 2 BYTES)
;
;
;********************************************************
;
;
; FOR USE IN ASSEMBLER CODED SUBROUTINES IN COMAL:
;
; LABELS FOR PROC/FUNC DEFINITIONS
;
ROMMED =%10000000
;
DEFPAG =2 ;RAM0+I/O
;
PROC =112
ENDPRC =126
;
FUNC =227
ENDFNC =126
;
PARAM =114
VALUE =PARAM+0
REF =PARAM+3
ARRAY =6
;
REAL =0
INT =1
STR =2
;
;
;  SIGNAL TYPES:
;
POWER1 =0 ;POWER UP SEI (ONLY FOR ROMMED LIBRARIES)
POWER2 =1 ;POWER UP CLI (ONLY FOR ROMMED LIBRARIES)
LINK =2 ;AFTER LINK/LOAD-COMMAND (ONLY LIBRARY JUST LINKED)
DSCRD =3 ;BEFORE DISCARD-COMMAND
NEW =4 ;AFTER NEW-COMMAND OR BAD LOAD/RUN/CHAIN
CLRTAB =5 ;AFTER NAME TABLE IS CLEARED
RUN =6 ;BEFORE RUN/CHAIN
WARM1 =7 ;WARM START SEI
CON =8 ;BEFORE CONTINUATION (CON COMMAND)
ERROR =9 ;AFTER ERROR MESSAGE PRINTED
STOP1 =10 ;AFTER STOP/END
BASIC =11 ;BEFORE LEAVING COMAL
;
;
;.END