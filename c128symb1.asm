; .OPT NOSYM
;
;
;
;   +--------------------------------------------------+
;   !                                                  !
;   !      ****** COMMODORE 128  COMAL-80 ******       !
;   !                                                  !
;   !      (C) COPYRIGHT UNICOMAL A/S 1984, 1986       !
;   !              ALL RIGHTS RESERVED.                !
;   !                                                  !
;   !                                                  !
;   !  C128SYMB1 FOR COMMODORE 128 COMAL-80 REV. 2.02  !
;   !                                                  !
;   +--------------------------------------------------+
;
;
;
TRUE =1
FALSE =0
;
; FYSISK MAP
;
FMAP1 = %00111111 ;RAM 0
FMAP2 = %00111110 ;RAM 0 + I/O
FMAP3 = %01111111 ;RAM 1
FMAP4 = %01111110 ;RAM 1 + I/O
;
FMAP5 = %00101111 ;EXT HI + RAM 0
FMAP6 = %00101110 ;EXT HI + RAM 0 + I/O
FMAP7 = %01101111 ;EXT HI + RAM 1
FMAP8 = %01101110 ;EXT HI + RAM 1 + I/O
;
FMAP9 = %10101111 ;EXT HI + RAM 2
FMAP10 = %10101110 ;EXT HI + RAM 2 + I/O
FMAP11 = %11101111 ;EXT HI + RAM 3
FMAP12 = %11101110 ;EXT HI + RAM 3 + I/O
;
FMAP13 = %00001110 ;KERNAL + RAM 0 + I/O
FMAP14 = %00001111 ;KERNAL + RAM 0 + CHARROM
FMAP15 = %00000000 ;KERNAL + RAM 0 + I/O+BASIC+MONITOR
;
COFMAP = FMAP5
POKMAP = 2 ;MAP FOR POKE,PEEK,SYS
CPAGE = 5 ;NORMAL COMAL MAP
GPAGE = 6 ;NORMAL GRAFIK MAP
MPAGE = 15 ;NORMAL MONITOR MAP
GRFMAP =FMAP6 ;FYSISK GRAFIK MAP
IQFMAP =FMAP13 ;FYSISK IRQ MAP RAM0+KER+IO
;
KEYPAG = 3 ;MAP FOR FUNC.KEYS (RAM1)
TERPAG = 3 ;MAP FOR TERMINATORS (RAM1)
DEFLEN = 32 ;MAX 32 CHARS. PER KEY
KYBASE = $FD00 ;PLACE FOR DEFINITIONS
TRBASE = $FC00 ;PLACE FOR TERMINATORS
INDPAG = 3 ;MAP FOR INDENT TABLE
INDTBL = $FB00 ;TABLE FOR INDENT VALUES (LIST)
BUF0 = $F900 ;BUFFER FOR CHANGE+SHOWKEYS
BUF1 = $FA00 ;BUFFER FOR CHANGE
BFFMAP = FMAP3 ;FYSISK MAP FOR BUF0+BUF1
TXMAP = $F700 ;TX MAP TABEL FOR ASCII CONV
RXMAP = $F800 ;RX MAP TABEL FOR ASCII CONV
MAFMAP = FMAP3 ;FYSISK MAP FOR MAP TABELS
;
IMMUA =FMAP13 ;INIT MMUPCRA  KERNAL+RAM0+I/O
IMMUB =FMAP7 ;INIT MMUPCRB  ENABLE CART+RAM1
IMMUC =FMAP6 ;INIT MMUPCRC  ENABLE CART+I/O+RAM0
IMMUD =FMAP5 ;INIT MMUPCRD  ENABLE CART+RAM0
;
PAGE1 =%10000000 ;CARTRIDGE OVERLAY 1 ($C000-$FFFF)
PAGE2 =%10010000 ;CARTRIDGE OVERLAY 2 ($C000-$FFFF)
PAGE3 =%10100000 ;CARTRIDGE OVERLAY 3 ($C000-$FFFF)
PAGE4 =%10110000 ;CARTRIDGE OVERLAY 4 ($C000-$FFFF)
PAGE5 =%11000000 ;CARTRIDGE OVERLAY 5 ($C000-$FFFF)
PAGE6 =%11010000 ;CARTRIDGE OVERLAY 6 ($C000-$FFFF)
PAGE7 =%11100000 ;CARTRIDGE OVERLAY 7 ($C000-$FFFF)
PAGE8 =%11110000 ;CARTRIDGE OVERLAY 8 ($C000-$FFFF)
;
;
PAGEA =PAGE2+CPAGE ;COMAL PAGE A ;=$95
PAGEB =PAGE5+CPAGE ;COMAL PAGE B ;=$C5
PAGEC =PAGE1+CPAGE ;COMAL PAGE C ;=$85
PAGED =PAGE6+CPAGE ;COMAL PAGE D ;=$D5
PAGEE =PAGE7+CPAGE ;COMAL PAGE E ;=$E5
PAGEF =PAGE8+CPAGE ;COMAL PAGE F ;=$F5
;
PAGEGD =PAGE6+GPAGE ;GRAFIK PAGE D ;=$D6
PAGEGE =PAGE7+GPAGE ;GRAFIK PAGE E ;=$E6
PAGEGF =PAGE8+GPAGE ;GRAFIK PAGE F ;=$F6
;
;
PAGEKE = 13+PAGE1 ;NORMAL KERNAL MAP
;
;
;     PAGE ZERO VARIABLES:
;     ====================
;
 *=$0000
;
D6510 *=*+1 ;6510 ON-CHIP DATA-DIRECTION REGISTER
R6510 *=*+1 ;6510 ON-CHIP 6-BIT I/O/MAP-REGISTER:
;
BANK *=*+1 ; MONITOR & LONG CALL/JUMP
PCHI *=*+1
PCLO *=*+1
SREG *=*+1
AREG *=*+1
XREG *=*+1
YREG *=*+1
STKPTR *=*+1
;
ASAVE =AREG ;SAVE FOR .A (CALL/GOTO)
XSAVE =XREG ;SAVE FOR .X (CALL/GOTO)
PSAVE =SREG ;SAVE FOR .P (CALL/GOTO)
GRWK3 =PCHI ; GRAPHIC WORK
;
;  MEMORY MAP CONTROL
;
PAGEPT *=*+2 ;POINTER USED BY LOAD/STORE/EXEC
PAGEY *=*+1 ;OVERLAY USED FOR CONTROL OF JUMP TABLE
PMMUCR *=*+1 ;OLD MMUCR USED FOR CONTROL OF JUMP TABLE
;
;  COMAL VARIABLES
;
LOCLPT *=*+2 ;CHAIN OF OLD VARIABLE DESCRIPTIONS
FORPT *=*+2 ;STACK ENTRY CHAIN
SCTYPE *=*+1 ;TYPE OF SYMBOL FROM SCANNER
TANSGN *=*+1 ;TAN SIGN / COMPARISON EVALUATION FLAG
CODE *=*+1 ;USED TO HOLD A GENERATED CODE
CPNT *=*+1 ;POINTER TO CODE BUFFER, CDBUF
CLIMIT =255 ;LIMIT OF CPNT
SPROG *=*+2 ;PNT TO START OF PROGRAM
SVARS *=*+2 ;PNT TO START OF VARIABLE TABLE
SSTACK *=*+2 ;PNT TO START OF STACK
SMAX *=*+2 ;PNT TO TOP OF MEMORY
EXINF *=*+1 ;INF FOR RESULT EXPRESSION FROM EXPR
SCERR =$01
SCLNO =$08 ;SET, IF NUMBER CAN BE A LINE NUMBER
LNLEN *=*+1 ;LENGTH OF LINE TO BE EXECUTED
NPNT *=*+1 ;POINTER TO NAME
TPNT *=*+1 ;POINTER TO STRING
TLIMIT =80
;
INDEX1 *=*+2 ;UTILITY POINTER
INDEX2 *=*+2 ;UTILITY POINTER
INDEX =INDEX1
;
RESM1 *=*+1 ;PRODUCT AREA FOR MULTIPLICATION
RESM2 *=*+1
RESM3 *=*+1
RESM4 *=*+1
RESM5 *=*+1
;
MULT1 =RESM1 ;FIRST OPERAND (MULT)
MULT2 =RESM3 ;SECOND OPERAND (MULT)
;
MOVELN =MULT1
MOVETY =MULT2
;
DATAPT *=*+2 ;CURRENT DATA POINTER
STOS *=*+2 ;PNT TO TOP OF STACK
SFREE *=*+2 ;PNT TO FREE AREA OF VAR.RES
PRGPNT *=*+2 ;PNT TO START OF LINE
CODPNT *=*+1 ;PNT TO CODE DURING EXECUTION
SCLSD1 *=*+2 ;OLD SFREE (CLOSED)
SCLSD2 *=*+2 ;OLD STOS  (CLOSED)
INF1 *=*+1
INF2 *=*+1 ;USED FOR OPERAND CHECKING
INF3 *=*+1
Q1 *=*+2 ;SHORT SPAN WORK AREAS
Q2 *=*+2
Q3 *=*+2
Q4 *=*+2
Q5 *=*+2
COPY1 *=*+2 ;WORK FOR COPY: FROM
COPY2 *=*+2 ;               TO
FDECPT =COPY2 ;CURRENT VARIABLE ADDRESS (DEC POINTER)
COPY3 *=*+2 ;               LENGTH
BUS *=*+1 ;BUS=0: BUS IDLE; BUS<>0: BUS ACTIVE
STINF *=*+1 ;INFORMATION FOR STATEMENT:
CMND =$01 ;  NO LINE NUMBER
TWOST =$02 ;  ANOTHER STATEMENT FOLLOWS
WHLDO =$04 ;  AFTER WHILE ... DO
FORDO =$08 ;  AFTER FOR ... DO
COMMNT =$10 ;  STATEMENT ENDED BY COMMENT
IFTHEN =$20 ;  AFTER IF ... THEN
REPUNT =$40 ;  AFTER REPEAT ... UNTIL
;
EXCINF *=*+1 ;EXECUTION INFORMATION:
ESCTRP =$02 ;  ESCAPE IS TRAPPED (STOP)
SRQ =$04 ;  MAKE CALL OF COMAL INTERRUPT HANDLER.
ESCMET =$08 ;  ESCAPE MET (STOP)
SRQON =$10 ;  SRQ ENABLED
USRQON =$20 ;  USER REQUEST ENABLED
SFTSRQ =$80 ;  SOFTWARE SRQ ONLY
;
;  VARIABLES FOR FLOATING POINT PACKAGES
;
TEMPF3 *=*+6 ;MISC. FP WORK AREA
NUMBER =TEMPF3 ;FP WORK AREA (SYNTAX ANALYSIS)
ESCAPE *=*+1 ;STOP KEY FLAG
INTEGR *=*+1 ;FP WORK
OLDOV *=*+1 ;OLD OVERFLOW (ROUNDING)
TEMPF1 *=*+5 ;MISC. FP WORK AREA (5 BYTES)
TEMPF2 *=*+5 ;MISC. FP WORK AREA (5 BYTES)
DECCNT =TEMPF2+1
TENEXP =TEMPF2+2
;
AC1 *=*+6 ;ACCUM#1:
AC1E =AC1+0 ;  EXPONENT
AC1M1 =AC1+1 ;  MANTISSA 1
AC1M2 =AC1+2 ;  MANTISSA 2
AC1M3 =AC1+3 ;  MANTISSA 3
AC1M4 =AC1+4 ;  MANTISSA 4
AC1S =AC1+5 ;  SIGN
;
DEGREE *=*+1 ;SERIES EVALUATION CONSTANT POINTER
BITS *=*+1 ;ACCUM#1: HI-ORDER (OVERFLOW)
;
AC2 *=*+6 ;ACCUM#2:
AC2E =AC2+0 ;  EXPONENT
AC2M1 =AC2+1 ;  MANTISSA 1
AC2M2 =AC2+2 ;  MANTISSA 2
AC2M3 =AC2+3 ;  MANTISSA 3
AC2M4 =AC2+4 ;  MANTISSA 4
AC2S =AC2+5 ;  SIGN
;
ARISGN *=*+1 ;SIGN COMPARISON, ACC#1 VS ACC#2
FACOV *=*+1 ;ACCUM#1: LO-ORDER (ROUNDING)
POLYPT *=*+2 ;POINTER TO POLYNOM.
FBUFPT =POLYPT
;
;  MORE COMAL VARIABLES
;
PRPROC *=*+3 ;CHAIN OF LOCAL NAMES (PREPASS)
INDPNT *=*+1 ;POINTER TO LAST CODE WHERE AN ADDRESS WAS LOADED
SCFLAG *=*+1 ;FLAGS IN SCANNER:
LNNO *=*+2 ;LINE NUMBER
MOVEAD *=*+2 ;ADDRESS FOR MOVE
TXTLO *=*+1 ;ADDRESS OF TEXT FOR PRTXT
TXTHI *=*+1
XX *=*+2 ;CURRENT X (GRAPHICS)
YY *=*+2 ;CURRENT Y (GRAPHICS)
GRWK1 *=*+2
GRWK2 *=*+2
GCOL *=*+1 ;GRAPHIC DRAW COLOR
GBACK *=*+1 ;GRAPHIC BACKGROUND
EXCFLG *=*+1 ;FLAGS:
NWNAME =$01 ; NEW NAME HAS BEEN INSERTED
NWLINE =$02 ; NEW LINE HAS BEEN INSERTED
CHARPT *=*+1 ; PNT TO INBUF
CHAR *=*+1 ; CHAR FROM INCHAR
RNDX *=*+5 ; RANDOM NUMBER SEED
;
;  VARIABLES FOR I/O
;
STATUS *=*+1 ;I/O OPERATION STATUS
STKEY *=*+1 ;STOP KEY FLAG
SVXT *=*+1 ;TEMPORARY
VERCK *=*+1 ;LOAD OR VERIFY FLAG
C3P0 *=*+1 ;IEEE BUFFERED CHAR FLAG
BSOUR *=*+1 ;CHAR BUFFER FOR IEEE
SYNO *=*+1 ;CASSETTE SYNC #
XSAV *=*+1 ;TEMP FOR BASIN
LDTND *=*+1 ;HOW MANY FILES OPEN
DFLTN *=*+1 ;DEFAULT INPUT DEVICE #
DFLTO *=*+1 ;DEFAULT OUTPUT DEVICE #
PRTY *=*+1 ;CASSETTE PARITY
T3 =PRTY
DPSW *=*+1 ;CASSETTE DIPOLE SWITCH
MSGFLG *=*+1 ;OS MESSAGE FLAG
PTR1 *=*+1 ;CASSETTE ERROR PASS 1
T1 =PTR1 ;TEMPORARY 1
PTR2 *=*+1 ;CASSETTE ERROR PASS 2
TMPC =PTR2
T2 =PTR2 ;TEMPORARY 2
TIME *=*+3 ;24 HOUR CLOCK IN 1/60 SEC.
R2D2 =* ;SERIAL BUS USAGE
PCNTR *=*+1 ;CASSETTE STUFF
BSOUR1 =* ;TEMP USED BY SERIAL ROUTINE
FIRT *=*+1
COUNT =* ;TEMP USED BY SERIAL ROUTINE
CNTDN *=*+1 ;CASSETTE SYNC COUNTDOWN
BUFPT *=*+1 ;TAPE BUFFER POINTER
SHCNL =* ;CASSETTE SHORT COUNT
INBIT *=*+1 ;RS232 RCVR INPUT BIT STORAGE
RER =* ;CASSETTE READ ERROR
BITCI *=*+1 ;RS232 RCVR BIT COUNT IN
REZ =* ;CASSETTE READING ZEROES
RINONE *=*+1 ;RS232 RCVR FLAG FOR START BIT CHECK
RDFLG =* ;CASSETTE READ MODE
RIDATA *=*+1 ;RS232 RCVR BYTE BUFFER
RIPRTY *=*+1 ;RS232 RCVR PARITY STORAGE
SHCNH =RIPRTY ;CASSETTE SHORT COUNT
SAL *=*+1 ;POINTER: TAPE BUFFER/SCREEN SCROLLING
SAH *=*+1
EAL *=*+1
EAH *=*+1
CMP0 *=*+1 ;TAPE TIMING CONSTANT
TEMP *=*+1 ;TAPE TIMING CONSTANT
TAPE1 *=*+2 ;START OF TAPE BUFFER
;
SNSW1 =* ;CASSETTE STUFF
BITTS *=*+1 ;RS232 TRNS BIT COUNT
NXTBIT *=*+1 ;RS232 TRNS NEXT BIT TO BE SENT
DIFF =NXTBIT ;EOT RECEIVED FROM TAPE
PRP =*
RODATA *=*+1 ;RS232 TRNS BYTE BUFFER
FNLEN *=*+1 ;LENGTH OF CURRENT FILE NAME
LA *=*+1 ;CURRENT FILE LOGICAL ADDRESS
SA *=*+1 ;CURRENT FILE SECONDARY ADDRESS
FA *=*+1 ;CURRENT FILE PRIMARY ADDRESS
FILADR *=*+2 ;CURRENT FILE NAME ADDRESS
OCHAR =*
ROPRTY *=*+1 ;RS232 TRNS PARITY BUFFER
FSBLK *=*+1 ;CASSETTE READ BLOCK COUNT
MYCH *=*+1 ;SERIAL WORD BUFFER
CAS1 *=*+1 ;CASSETTE MANUAL/CONTROLLED SWITCH
STAL *=*+1 ;TAPE START ADDRESS
STAH *=*+1
TMP2 =*
MEMUSS *=*+2 ;TAPE LOAD TEMPS
DATA *=*+1 ;TAPE R/W DATA
BA *=*+1 ;BANK CUR LOAD/SAVE/VER OPE.
FNBANK *=*+1 ;BANK FOR CUR FILENAME
;
RIBUF *=*+2 ;RS-232 INPUT BUF PTR
ROBUF *=*+2 ;RS-232 OUTPUT BUF PTR
;
; 40/80 COLUMN SCREEN EDITOR
;
; GLOBAL SCREEN EDITOR VAR
;
KEYTAB *=*+2 ;KEYSCAN TABLE PTR
IMPARM *=*+2 ;����� UTIL. STRING PTR
NDX *=*+1 ;INDEX TO KEYB. QUEUE
KYNDX *=*+1 ;PENDING FUNC. KEY FLAG
KEYIDX *=*+1 ;INDEX INTO PEND. FUNC. KEY STRING
SHFLAG *=*+1 ;KEYSCAN SHIFT KEY STATUS
SFDX *=*+1 ;KEYSCAN CUR. KEY INDEX
LSTX *=*+1 ;KEYSCAN LAST KEY INDEX
NEWKEY =LSTX
CRSW *=*+1 ;<CR> INPUT FLAG
;
EMODE *=*+1 ;40/80 COL. MODE FLAG
GRAPHM *=*+1 ;TEXT/GRAPHIC MODE FLAG
;
CHAREN *=*+1 ;RAM/ROM VIC CHR FETCH FLAG (BIT-2)
;
; THE FOLLOWING ARE SHARED BY SEVERAL EDIT. ROUTINES
;
SEDSAL *=*+2 ;POINTER FOR ������
SEDEAL *=*+2
SEDT1 *=*+1 ;������
SEDT2 *=*+1
;
 *=SEDSAL ;SHARE WITH SEDSAL
KEYSIZ *=*+1 ;PROGRAMMABLE KEY VAR.
KEYLNG *=*+1
KEYNUM *=*+1
KEYNXT *=*+1
KEYBNK *=*+1
KEYTMP *=*+1
;
 *=SEDSAL ;SHARE WITH SEDSAL
BITMSK *=*+1 ;TEMP FOR ��� & LINE WRAP ROUT.
SAVER *=*+1
 *=*+4
;
; ����� SCREEN EDITOR VAR.
;
PNT *=*+2 ;PTR TO CUR LINE(TEXT)
CURLIN =PNT
USER *=*+2 ;PTR TO CUR LINE(ATTRIBUTE)
;
SCBOT *=*+1 ;WINDOW LOWER LIMIT
SCTOP *=*+1 ;WINDOW UPPER LIMIT
SCLF *=*+1 ;WINDOW LEFT MARGIN
SCRT *=*+1 ;WINDOW RIGHT MARGIN
;
LSXP *=*+1 ;CUR INPUT COLUMN START
LSTP *=*+1 ;CUR INPUT LINE START
INDX *=*+1 ;CUR INPUT LINE END
;
TBLX *=*+1 ;CUR CURSOR LINE
ROWPOS =TBLX
PNTR *=*+1 ;CUR CURSOR COLUMN
COLPOS =PNTR
;
LINES *=*+1 ;MAX NUMBER OF SCREEN LINES
COLUMN *=*+1 ;MAX NUMBER OF SCREEN COLUMNS
DATAX *=*+1 ;CUR CHARACTER TO PRINT
LSTCHR *=*+1 ;PREV. CHARACTER PRINTED(FOR ���)
COLOR *=*+1 ;CUR ATTRIBUTE TO PRINT(DEF FGND COLOR)
TCOLOR *=*+1 ;SAVED ATRIBUTE TO PRINT
;
RVS *=*+1 ;REVERSE MODE FLAG
QTSW *=*+1 ;QUOTE MODE FLAG
QUOTE =QTSW
INSRT *=*+1 ;INSERT MODE FLAG
INSFLG *=*+1 ;AUTO-INSERT MODE FLAG
;
LOCKS *=*+1 ;DISABLE <C=><SHIFT>, <CRTL>-�
SCROLL *=*+1 ;DISABLE SCREEN SCROLL, LINE LINKER
BEEPER *=*+1 ;DISABLE <CRTL>-�
 *=*+1 ;CHANGED BY SWAP EDIT MODE
;
;  MORE COMAL VAR
;
MAPX *=*+1 ;MAP FOR LOAD/STORE/EXEC ROUTINES
PAGEX *=*+1 ;OVERLAY FOR LOAD/STORE/EXEC ROUTINES
 ; GRAPHIC VAR
RESOL *=*+1 ;GRAPHICS RESOLUTION
GCOLH *=*+1 ;GRAPHICS PENCOLOR*16
;
;  END OF PAGE ZERO
;
 *=$0100
STACK *=*+256 ;SYSTEM STACK
FBUFFR =STACK ;FPASC WORK AREA (15 BYTES)
BAD =STACK ;TAPE INPUT ERROR LOG
;
;
ERTLEN *=*+1 ;LENGTH OF ERTEXT
MAXERT =79 ;MAX. LENGTH OF ERTEXT
ERTEXT *=*+MAXERT ;BUFFER TO HOLD ES�OR MESSAGE
;
FNMAX =55
FILNAM *=*+FNMAX ;USED FOR STORAGE OF FILE NAME
TBUFF =FILNAM ;USED FOR STORAGE OF DISC COMMAND
;
;  STORAGE FOR CON COMMAND:
;
CONPNT *=*+2 ;OLD PRGPNT
CONFLG *=*+1 ;OLD EXCINF
CONCOD *=*+1 ;OLD CODPNT
CONFOR *=*+2 ;OLD FORPT
;
FPWORK *=*+1
;
;
 *=$02A2
;
FETCH *=*+13 ;���( - ),Y FROM ANY BANK
FETVEC =FETCH+8
;
STASH *=*+15 ;���( - ),Y TO ANY BANK
STAVEC =STASH+10
;
CMPARE *=*+15 ;���( - ),Y TO ANY BANK
CMPVEC =CMPARE+10
;
JSRFAR *=*+22 ;��� XXXX TO ANY BANK & RETURN
;
JMPFAR *=*+25 ;��� XXXX TO ANY BANK
;
;      *=$02FC
;
;
; COMAL VECTORS
;
IOVECT =* ;VECTORS:
TRAPVC *=*+2 ; PAGEB; ERROR HANDLER
EXTNVC *=*+2 ; PAGEB; EXTERNAL LOAD
USRQVC *=*+2 ; PAGEB; INTERRUPT FACILITY
IERTXT *=*+3 ;        ERROR MESSAGE DATA
IGETLN *=*+2 ; PAGEA; INPUT COMMAND LINE
ISAVEC *=*+2 ; PAGEC; SAVE ADDITIONAL INFO
ILOADC *=*+2 ; PAGEC; LOAD ADDITIONAL INFO
IFNKEY *=*+2 ; PAGEA; HANDLE FUNCTION KEYS
;
 *=$0314 ;KERNAL INDIRECT VECTORS
;
;  KERNAL VECTORS:
;
IIRQ *=*+2 ;IRQ RAM VECTOR
CINV =IIRQ
IRQVCT =IIRQ
;
IBRK *=*+2 ;BRK INSTR RAM VECTOR
CBINV =IBRK
BRKVCT =IBRK
;
INMI *=*+2 ;NMI RAM VECTOR
NMIVCT =INMI
;
IOPEN *=*+2 ;OPEN ROUTINE VECTOR
ICLOSE *=*+2 ;CLOSE ROUTINE VECTOR
ICHKIN *=*+2 ;CHKIN ROUTINE VECTOR
ICKOUT *=*+2 ;CKOUT ROUTINE VECTOR
ICLRCH *=*+2 ;CLRCHN ROUTINE VECTOR
IBASIN *=*+2 ;CHRIN ROUTINE VECTOR
IBSOUT *=*+2 ;CHROUT ROUTINE VECTOR
ISTOP *=*+2 ;STOP ROUTINE VECTOR
IGETIN *=*+2 ;GETIN ROUTINE VECTOR
ICLALL *=*+2 ;CLALL ROUTINE VECTOR
EXMON *=*+2 ;FOR MACHINE LANGUAGE MONITOR
ILOAD *=*+2 ;LOAD ROUTINE VECTOR
ISAVE *=*+2 ;SAVE ROUTINE VECTOR
;
;  EDITOR VECTORS
;
CTLVEC *=*+2 ;EDITOR: PRINT 'CONTRL' INDIRECT
SHFVEC *=*+2 ;EDITOR: PRINT 'SHIFTD' INDIRECT
ESCVEC *=*+2 ;EDITOR: PRINT 'ESCAPE' INDIRECT
KEYVEC *=*+2 ;EDITOR: KEYSCAN LOGIC INDIRECT
KEYCHK *=*+2 ;EDITOR: STORE KEY INDIRECT
;
DECODE *=*+12 ;VECTORS TO KEYB. MATRIX DEC TABLES
;
 *=$034A
KEYD *=*+10 ;IRQ KEYBOARD BUFFER
KEYBUF = KEYD
;
TABMAP *=*+10 ;BITMAP OF TAB STOPS
BITABL *=*+4 ;BITMAP OF LINE WRAPS
;
LAT *=*+10 ;TABLE OF LA'S
FAT *=*+10 ;TABLE OF FA'S
SAT *=*+10 ;TABLE OF SA'S
;
; COMAL:
; OPEN FILE MODES (COPEN & CFNAME):
;
MREAD =1 ;READ
MWRITE =2 ;WRITE
MREL =4 ;RELATIVE (RANDOM)
;
; FILE ATTRIBUTES (COPEN):
;
MDISK =8 ;DISK FILE
MS =16 ;SECONDARY ADDRESS SELECTION
ML =32 ;AUTO LINEFEED
MT =64 ;TIME OUT
MA =128 ;ASCII I/O
;
; FILE TYPES (CFNAME):
;
TAPPND =8
TPRG =16
TSEQ =TPRG+TPRG
TREL =TSEQ+TPRG
TUSR =TREL+TPRG
;
MODET *=*+10 ;OPEN MODE FOR FILES
COUNTT *=*+10 ;TABLE OF BYTE COUNT FOR FILES
STT *=*+10 ;STATUS FOR OPENED FILES
RECOTL *=*+10 ;TABLE OF RECORD POS. FOR FILES
RECOTH *=*+10
;
LIBPT *=*+1 ;PTR TO PLACE FOR NEXT LIBRARY DESCRIPTION
;
LIBLEN =10 ;NO. OF LIBRARY DESCRIPTIONS
;
LIBLO *=*+LIBLEN
LIBHI *=*+LIBLEN
LIBPAG *=*+LIBLEN
;
KEYLEN *=*+16 ;LENGTHS OF FUNC.KEY DEF'S
KLEN *=*+1 ;# OF CHARS LEFT OF DEF.
KPNT *=*+2 ;PNT TO KEY DEF
;
; BASIC/KERNAL DMA REQ. RAM CODE
;
 *=$0400 ;VIDEO MATRIX #1: VIC 40-COLUMN TEXT
VICSCN *=*+1024
;
 *=VICSCN
SCSIZE =1000 ;SCREEN SIZE
SCREEN *=*+SCSIZE ;SCREEN MEMORY AREA
 *=*+16 ;SCREEN MEMORY EXCESS
SPRPNT *=*+8 ;SPRITE DATA POINTERS
;
; COMAL VAR
;
;
INLEN =162
INBUF *=*+INLEN ;INPUT BUFFER
CDBUF *=*+CLIMIT ;CODE BUFFER
TXT *=*+TLIMIT ;STRING CONSTANT BUFFER
TXT1 =TXT-1
;
FLEVEL *=*+1 ;FOR/TRAP NESTING LEVEL DURING PREPASS
Q6 *=*+2 ;TEMPORARY
Q7 *=*+2 ;TEMPORARY
Q8 *=*+2 ;TEMPORARY
Q9 *=*+2 ;TEMPORARY
INDPTR *=*+1 ;POINTER TO INDTBL
CURCHK *=*+1 ;SAVE FOR FILE# IN CHKIN,CKOUT
EXPSTA *=*+1 ;EXPECTED DISK STATUS
;
OPTIO1 *=*+1 ;OPTION1: =0: , =1 ; ZONE SEPARATOR
DRSCMD *=*+1 ;DEFAULT RS232 CMD REG
DRSCTR *=*+1 ;DEFAULT RS232 CTRL REG
.END